name: CI/CD Pipeline for MERN App

on:
  push:
    branches:
      - main  # Run the workflow only on main branch push

jobs:
  ### 1. Simple CI Job ###
  test:
    name: Simple CI Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm run build || echo "Frontend build failed, skipping..."

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install

      - name: Placeholder for backend tests
        run: echo "Skipping backend tests for now..."

  ### 2. Build and Push Docker Images to Docker Hub ###
  build-and-push:
    name: Build & Push Docker Images
    needs: test
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_NAME: elonerajeev/mern-ecommerce

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build and Tag Frontend Image
        run: |
          docker build -t $IMAGE_NAME-frontend:latest ./frontend
          docker tag $IMAGE_NAME-frontend:latest $IMAGE_NAME-frontend:latest

      - name: Build and Tag Backend Image
        run: |
          docker build -t $IMAGE_NAME-backend:latest ./backend
          docker tag $IMAGE_NAME-backend:latest $IMAGE_NAME-backend:latest

      - name: Push Frontend & Backend Images
        run: |
          docker push $IMAGE_NAME-frontend:latest
          docker push $IMAGE_NAME-backend:latest

  ### 3. Manual Approval Stage ###
  approval:
    name: Wait for Manual Approval
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Await Deployment Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: elonerajeev
          minimum-approvals: 1
          issue-title: "Approve Production Deployment"
          issue-body: "Please approve to continue deployment of MERN App"

  ### 4. Deployment Stage (to Render, AWS, etc.) ###
  deploy:
    name: Deploy to Render Platform
    needs: approval
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Frontend to Render
        run: |
          echo "Triggering Frontend Deploy Hook...."
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_FRONTEND }}

      - name: Deploy Backend to Render
        run: |
          echo "Triggering Backend Deploy Hook..."
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
